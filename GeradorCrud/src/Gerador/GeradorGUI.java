package Gerador;

import java.util.ArrayList;
import java.util.List;
import tools.ManipulaArquivo;

/**
 *
 * @author Winicius Abilio de Britto
 */
public class GeradorGUI {

    public GeradorGUI() {
    }

    public GeradorGUI(String classe, String classeMinusculo, String nomeAtributo,
            String tipo, String listaLbTf, String listaColuna, String listaPn2,
            String listaEditavelFalse, String listaEditavelTrue, String pkBtBuscar, String btBuscarSetText,
            String btBuscarSetTextVazio, String btSalvar) {
        List<String> codigoGUI = new ArrayList<>();
        codigoGUI.add("package GUI;\n"
                + "\n"
                + "import Controle.Controle" + classe + ";\n"
                + "import Entidade." + classe + ";\n"
                + "import java.awt.CardLayout;\n"
                + "import java.awt.Container;\n"
                + "import java.awt.Dimension;\n"
                + "import java.awt.FlowLayout;\n"
                + "import java.awt.GridLayout;\n"
                + "import java.awt.Toolkit;\n"
                + "import java.awt.event.ActionEvent;\n"
                + "import java.awt.event.ActionListener;\n"
                + "import java.awt.event.WindowAdapter;\n"
                + "import java.awt.event.WindowEvent;\n"
                + "import java.util.List;\n"
                + "import javax.swing.JButton;\n"
                + "import javax.swing.JDialog;\n"
                + "import javax.swing.JCheckBox;\n"
                + "import javax.swing.JLabel;\n"
                + "import javax.swing.JOptionPane;\n"
                + "import javax.swing.JPanel;\n"
                + "import javax.swing.JScrollPane;\n"
                + "import javax.swing.JTable;\n"
                + "import javax.swing.JTextField;\n"
                + "import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;\n"
                + "import javax.swing.table.DefaultTableModel;\n"
                + "\n"
                + "\n"
                + "/**\n"
                + " *\n"
                + " * @author Winicius Abilio de Britto\n"
                + " */\n"
                + "public class GUI" + classe + " extends JDialog {\n"
                + "    Container cp;\n"
                + "    JPanel pn1 = new JPanel();\n"
                + "    JPanel pn1_1 = new JPanel();\n"
                + "    JPanel pn2 = new JPanel();\n\n"
                + listaLbTf
                + "\n    JButton btBuscar = new JButton(\"Buscar\");\n"
                + "    JButton btAdicionar = new JButton(\"Adicionar\");\n"
                + "    JButton btSalvar = new JButton(\"Salvar\");\n"
                + "    JButton btAlterar = new JButton(\"Alterar\");\n"
                + "    JButton btExcluir = new JButton(\"Excluir\");\n"
                + "    JButton btListar = new JButton(\"Listar\");\n"
                + "    JButton btCancelar = new JButton(\"Cancelar\");\n"
                + "\n"
                + "    Controle" + classe + " controle = new Controle" + classe + "();\n"
                + "    " + classe + " " + classeMinusculo + " = new " + classe + "();\n"
                + "    String acao = \"\";\n"
                + "\n"
                + "    /////////////////////////////////////////////////\n"
                + "    String[] colunas = new String[]{" + listaColuna + "};\n"
                + "    String[][] dados = new String[0][colunas.length];\n"
                + "\n"
                + "    DefaultTableModel model = new DefaultTableModel(dados, colunas);\n"
                + "    JTable tabela = new JTable(model);\n"
                + "\n"
                + "    private JScrollPane scrollTabela = new JScrollPane();\n"
                + "\n"
                + "    private CardLayout cardLayout;\n\n"
                + "    public GUI" + classe + "() {\n"
                + "        setDefaultCloseOperation(DISPOSE_ON_CLOSE);\n"
                + "        cp = getContentPane();\n"
                + "        cp.setLayout(new GridLayout(4, 1));\n"
                + "        setTitle(\"CRUD - " + classe + "\");\n"
                + "        cp.add(pn1);\n"
                + "        cp.add(pn1_1);\n"
                + "        cp.add(pn2);\n\n"
                + "        pn1.setLayout(new FlowLayout(FlowLayout.LEFT));\n"
                + "        pn1.add(lb" + nomeAtributo + ");\n"
                + "        pn1.add(tf" + nomeAtributo + ");\n"
                + "        pn1.add(btBuscar);\n"
                + "        pn1.add(btAdicionar);\n"
                + "        pn1.add(btAlterar);\n"
                + "        pn1.add(btExcluir);\n"
                + "        pn1.add(btSalvar);\n"
                + "        pn1.add(btCancelar);\n\n"
                + "        pn1_1.setLayout(new FlowLayout(FlowLayout.LEFT));\n"
                + "        pn1_1.add(btListar);\n\n"
                + "        btSalvar.setVisible(false);\n"
                + "        btAdicionar.setVisible(false);\n"
                + "        btAlterar.setVisible(false);\n"
                + "        btExcluir.setVisible(false);\n"
                + "        btCancelar.setVisible(false);\n"
                + "\n"
                + "        pn2.setLayout(new GridLayout(4, 2));\n"
                + listaPn2
                + "\n"
                + "        tabela.setEnabled(false);\n"
                + "\n        "
                + listaEditavelFalse
                + "\n"
                + "        String caminho = \"" + classe + ".csv\";\n"
                + "        //carregar dados do HD para memória RAM\n"
                + "        controle.carregarDados(caminho);\n"
                + "\n"
                + "        btBuscar.addActionListener(new ActionListener() {\n"
                + "            @Override\n"
                + "            public void actionPerformed(ActionEvent e) {\n                "
                + pkBtBuscar
                + "                try {\n"
                + "                    " + classeMinusculo + " = controle.buscar(" + nomeAtributo + ");\n"
                + "\n"
                + "                    if (" + classeMinusculo + " != null) {//achou o " + classeMinusculo + " na lista\n"
                + "                        //mostrar\n"
                + "                        btAdicionar.setVisible(false);\n"
                + "                        btAlterar.setVisible(true);\n"
                + "                        btExcluir.setVisible(true);\n"
                + btBuscarSetText
                + "                    } else {\n"
                + "                        //mostrar botão adicionar\n"
                + btBuscarSetTextVazio
                + "                        btAdicionar.setVisible(true);\n"
                + "                        btAlterar.setVisible(false);\n"
                + "                        btExcluir.setVisible(false);\n"
                + "                    }\n"
                + "                } catch (Exception erro) {\n"
                + "                    JOptionPane.showMessageDialog(null, \"Digite um valor válido!\", \"Erro valor invalido\", JOptionPane.INFORMATION_MESSAGE);\n"
                + "                }\n"
                + "            }\n"
                + "        });\n\n"
                + "        btAdicionar.addActionListener(new ActionListener() {\n"
                + "            @Override\n"
                + "            public void actionPerformed(ActionEvent e) {\n"
                + listaEditavelTrue
                + "                btAdicionar.setVisible(false);\n"
                + "                btSalvar.setVisible(true);\n"
                + "                btCancelar.setVisible(true);\n"
                + "                btBuscar.setVisible(false);\n"
                + "                btListar.setVisible(false);\n"
                + "                acao = \"adicionar\";\n"
                + "            }\n"
                + "        });\n\n"
                + "        btSalvar.addActionListener(new ActionListener() {\n"
                + "            @Override\n"
                + "            public void actionPerformed(ActionEvent e) {\n"
                + "                try {\n"
                + "                    if (acao.equals(\"adicionar\")) {\n"
                + "                        " + classeMinusculo + " = new " + classe + "();\n"
                + "                    }\n"
                + "                    " + classe + " " + classeMinusculo + "Antigo = " + classeMinusculo + ";\n"
                + btSalvar
                + "                    if (acao.equals(\"adicionar\")) {\n"
                + "                        controle.adicionar(" + classeMinusculo + ");\n"
                + "                    } else {\n"
                + "                        controle.alterar(" + classeMinusculo + ", " + classeMinusculo + "Antigo);\n"
                + "                    }\n"
                + "                    btSalvar.setVisible(false);\n"
                + "                    btCancelar.setVisible(false);\n"
                + "                    btBuscar.setVisible(true);\n"
                + "                    btListar.setVisible(true);\n"
                + btBuscarSetTextVazio
                + listaEditavelFalse
                + "                } catch (Exception erro) {\n"
                + "                    JOptionPane.showMessageDialog(null, \"Digite valores validos!\", \"Erro valores invalidos!\", JOptionPane.INFORMATION_MESSAGE);\n"
                + "                }\n"
                + "            }\n"
                + "        });\n\n"
                + "        btAlterar.addActionListener(new ActionListener() {\n"
                + "            @Override\n"
                + "            public void actionPerformed(ActionEvent e) {\n"
                + "                btBuscar.setVisible(false);\n"
                + "                btAlterar.setVisible(false);\n"
                + btBuscarSetTextVazio
                + listaEditavelTrue
                + "                btSalvar.setVisible(true);\n"
                + "                btCancelar.setVisible(true);\n"
                + "                btListar.setVisible(false);\n"
                + "                btExcluir.setVisible(false);\n"
                + "                acao = \"alterar\";\n"
                + "            }\n"
                + "        });\n\n"
                + "        btExcluir.addActionListener(new ActionListener() {\n"
                + "            @Override\n"
                + "            public void actionPerformed(ActionEvent e) {\n"
                + "                int response = JOptionPane.showConfirmDialog(cp, \"Confirmar a exclusão?\", \"Aviso de exclusão\",\n"
                + "                        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);\n"
                + btBuscarSetTextVazio
                + listaEditavelFalse
                + "                btExcluir.setVisible(false);\n"
                + "                btBuscar.setVisible(true);\n"
                + "                btAlterar.setVisible(false);\n"
                + "                if (response == JOptionPane.YES_OPTION) {\n"
                + "                    controle.excluir(" + classeMinusculo + ");\n"
                + "                }\n"
                + "            }\n"
                + "        });\n\n"
                + "        btListar.addActionListener(new ActionListener() {\n"
                + "            @Override\n"
                + "            public void actionPerformed(ActionEvent e) {\n"
                + "\n"
                + "                List<" + classe + "> lista" + classe + " = controle.listar();\n"
                + "                String[] colunas = {" + listaColuna + "};\n"
                + "                Object[][] dados = new Object[lista" + classe + ".size()][colunas.length];\n"
                + "                String aux[];\n"
                + "                for (int i = 0; i < lista" + classe + ".size(); i++) {\n"
                + "                    aux = lista" + classe + ".get(i).toString().split(\";\");\n"
                + "                    for (int j = 0; j < colunas.length; j++) {\n"
                + "                        dados[i][j] = aux[j];\n"
                + "                    }\n"
                + "                }\n"
                + "                scrollTabela.setPreferredSize(tabela.getPreferredSize());\n"
                + "                scrollTabela.setViewportView(tabela);\n"
                + "\n"
                + "                model.setDataVector(dados, colunas);\n"
                + "\n"
                + "                JDialog Lista = new JDialog();\n"
                + "\n"
                + "                Lista.setTitle(\"Lista de " + classeMinusculo + "\");\n"
                + "                Lista.add(scrollTabela);\n"
                + "                Toolkit tk = Toolkit.getDefaultToolkit();\n"
                + "                Dimension d = tk.getScreenSize();\n"
                + "                Lista.setSize(d.width, d.height);\n"
                + "                Lista.setLocationRelativeTo(null);//centraliza na tela\n"
                + "                Lista.setVisible(true);\n"
                + "\n"
                + "                btAlterar.setVisible(false);\n"
                + "                btExcluir.setVisible(false);\n"
                + "                btAdicionar.setVisible(false);\n"
                + "            }\n"
                + "        });\n"
                + "\n"
                + "        btCancelar.addActionListener(new ActionListener() {\n"
                + "            @Override\n"
                + "            public void actionPerformed(ActionEvent e) {\n"
                + "                btCancelar.setVisible(false);\n"
                + btBuscarSetTextVazio
                + listaEditavelFalse
                + "                btBuscar.setVisible(true);\n"
                + "                btListar.setVisible(true);\n"
                + "                btSalvar.setVisible(false);\n"
                + "                btCancelar.setVisible(false);\n"
                + "\n"
                + "            }\n"
                + "        });\n"
                + "\n"
                + "        addWindowListener(new WindowAdapter() {\n"
                + "            @Override\n"
                + "            public void windowClosing(WindowEvent e) {\n"
                + "                //antes de sair, salvar a lista em disco\n"
                + "                controle.gravarLista(caminho);\n"
                + "                // Sai da classe\n"
                + "                dispose();\n"
                + "            }\n"
                + "        });\n"
                + "\n"
                + "        setSize(700, 300);\n"
                + "        setLocationRelativeTo(null);//centraliza na tela\n"
                + "        setVisible(true);\n"
                + "    }\n"
                + "\n"
                + "    public static void main(String[] args) {\n"
                + "        GUI" + classe + " gui" + classe + " = new GUI" + classe + "();\n"
                + "    }\n"
                + "\n"
                + "}"
        );

        ManipulaArquivo manipulaArquivo = new ManipulaArquivo();
        manipulaArquivo.salvarArquivo("src/GUI/GUI" + classe + ".java", codigoGUI);

        for (int i = 0; i < codigoGUI.size(); i++) {
            System.out.println(codigoGUI.get(i));
        }

    }

}
